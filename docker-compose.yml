services:

  camera-1-service:
    hostname: camera-1-service
    container_name: camera-1-service
    build: ./camera-service
    networks:
      - healthy-cameras
    expose:
      - 8080
    ports:
      - "8080:8080"

  kong-database:
    hostname: kong-database
    build:
      context: ./docker-psql/.
    env_file: ./docker-psql/.env
    user: postgres
    volumes:
      - ./docker-psql/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    container_name: kong-database
    image: postgres
    restart: always
    networks:
      - healthy-cameras
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong
    depends_on:
      - "kong-database"
    container_name: kong-migration
    networks:
      - healthy-cameras
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations bootstrap && kong migrations up && kong migrations finish

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    networks:
      healthy-cameras:
        ipv4_address: ${PROMETHEUS}
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      healthy-cameras:
        ipv4_address: ${GRAFANA}
    hostname: grafana
    restart: always
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning
    ports:
      - 3000:3000

  kong:
    container_name: kong
    image: kong
    depends_on:
      - "kong-migration"
      - "kong-database"
    restart: always
    networks:
      - healthy-cameras
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444
    healthcheck:
      test: ["CMD-SHELL","curl -I -s -L http://localhost:8000 || exit 1"]
      interval: 5s
      retries: 10

  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: ./nginx/.
    ports:
      - "8090:8090"
    restart: on-failure
    environment:
      - GRAFANA=${GRAFANA}
      - PROMETHEUS=${PROMETHEUS}
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 300M
    networks:
      - healthy-cameras

networks:
  healthy-cameras:
    external: false
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
