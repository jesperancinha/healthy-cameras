<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jesperancinha.cameras</groupId>
    <version>0.0.0</version>
    <artifactId>healthy-cameras</artifactId>
    <name>Healthy Cameras >> Parent Project</name>

    <packaging>pom</packaging>

    <modules>
        <module>camera-service</module>
        <module>cameras-auth-service</module>
        <module>cameras-client-service</module>
    </modules>

    <properties>
        <java.version>17</java.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-compiler-plugin.source>${java.version}</maven-compiler-plugin.source>
        <maven-compiler-plugin.target>${java.version}</maven-compiler-plugin.target>
        <kotlin.version>1.7.21</kotlin.version>
        <spring-boot-starter-parent.version>2.7.5</spring-boot-starter-parent.version>
        <omni-coveragereporter-maven-plugin.version>0.3.0</omni-coveragereporter-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <r2dbc-postgresql.version>0.8.13.RELEASE</r2dbc-postgresql.version>
        <springdoc-openapi-webflux-ui.version>1.6.13</springdoc-openapi-webflux-ui.version>
        <springdoc-openapi-webflux-core.version>1.6.12</springdoc-openapi-webflux-core.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <postgresql.version>42.5.0</postgresql.version>
        <micrometer-registry-statsd.version>1.10.1</micrometer-registry-statsd.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.r2dbc</groupId>
                <artifactId>r2dbc-postgresql</artifactId>
                <version>${r2dbc-postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-statsd</artifactId>
                <version>${micrometer-registry-statsd.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-webflux-ui</artifactId>
                <version>${springdoc-openapi-webflux-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-webflux-core</artifactId>
                <version>${springdoc-openapi-webflux-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jesperancinha.plugins</groupId>
                <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                <version>${omni-coveragereporter-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>