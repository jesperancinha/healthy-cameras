services:

  camera-1-service:
    hostname: camera-1-service
    container_name: camera-1-service
    build: ./camera-service
    networks:
      - healthy-cameras
    expose:
      - 8080
    depends_on:
      kong-database:
        condition: service_healthy

  kong-database:
    hostname: kong-database
    build:
      context: docker-images/docker-psql/.
    env_file: docker-images/docker-psql/.env
    user: postgres
    volumes:
      - ./docker-images/docker-psql/init-scripts:/docker-entrypoint-initdb.d
    expose:
      - 5432
    container_name: kong-database
    image: postgres
    networks:
      - healthy-cameras
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kong" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong
    depends_on:
      kong-database:
        condition: service_healthy
    container_name: kong-migration
    networks:
      - healthy-cameras
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations bootstrap && kong migrations up && kong migrations finish

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    networks:
      healthy-cameras:
        ipv4_address: ${PROMETHEUS}
    volumes:
      - ./docker-images/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    expose:
      - 9090
    depends_on:
      kong-database:
        condition: service_healthy

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      healthy-cameras:
        ipv4_address: ${GRAFANA}
    hostname: grafana
    volumes:
      - ./docker-images/grafana/provisioning/:/etc/grafana/provisioning
    expose:
      - 3000
    depends_on:
      kong-database:
        condition: service_healthy

  kong:
    container_name: kong
    image: kong
    networks:
      - healthy-cameras
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    expose:
      - 8000
      - 8001
      - 8443
      - 8444
      - 8125
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001" ]
      interval: 5s
      retries: 10
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully

  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: docker-images/nginx/.
    expose:
      - 8090
      - 8091
    environment:
      - GRAFANA=${GRAFANA}
      - PROMETHEUS=${PROMETHEUS}
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 300M
    networks:
      - healthy-cameras
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
      kong:
        condition: service_healthy

  graphite:
    container_name: graphite
    hostname: graphite
    build: ./docker-images/graphite/.
    expose:
      - 8085
      - 2003-2004
      - 2023-2024
      - 8125
      - 8126
    networks:
      healthy-cameras:
        ipv4_address: ${GRAPHITE}

  kong-deck:
    hostname: kong-deck
    container_name: kong-deck
    image: kong/deck
    volumes:
      - ${PWD}/kong:/deck
    command: "sync --kong-addr http://kong:8001 -s /deck/kong.yaml"
    networks:
      - healthy-cameras
    depends_on:
      kong:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully

networks:
  healthy-cameras:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}