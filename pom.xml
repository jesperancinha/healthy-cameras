<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jesperancinha.cameras</groupId>
    <version>0.0.0</version>
    <artifactId>healthy-cameras</artifactId>
    <name>Healthy Cameras >> Parent Project</name>

    <packaging>pom</packaging>

    <modules>
        <module>camera-service</module>
        <module>cameras-auth-service</module>
        <module>cameras-client-service</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
        <maven-compiler-plugin.source>${java.version}</maven-compiler-plugin.source>
        <maven-compiler-plugin.target>${java.version}</maven-compiler-plugin.target>
        <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.5.4</maven-failsafe-plugin.version>
        <kotlin.version>2.2.20</kotlin.version>
        <spring-boot-starter-parent.version>3.5.7</spring-boot-starter-parent.version>
        <omni-coveragereporter-maven-plugin.version>0.4.5</omni-coveragereporter-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.14</jacoco-maven-plugin.version>
        <r2dbc-postgresql.version>0.8.13.RELEASE</r2dbc-postgresql.version>
        <testcontainers.version>1.21.3</testcontainers.version>
        <springdoc-openapi-starter-webflux-ui.version>2.8.13</springdoc-openapi-starter-webflux-ui.version>
        <kotest-assertions-core-jvm.version>6.0.4</kotest-assertions-core-jvm.version>
        <springmockk.version>4.0.2</springmockk.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.r2dbc</groupId>
                <artifactId>r2dbc-postgresql</artifactId>
                <version>${r2dbc-postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc-openapi-starter-webflux-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-assertions-core-jvm</artifactId>
                <version>${kotest-assertions-core-jvm.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.ninja-squad</groupId>
                <artifactId>springmockk</artifactId>
                <version>${springmockk.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jesperancinha.plugins</groupId>
                <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                <version>${omni-coveragereporter-maven-plugin.version}</version>
                <configuration>
                    <extraSourceFolders>
                        <param>${project.basedir}/cameras-gui</param>
                    </extraSourceFolders>
                    <extraReportFolders>
                        <param>${project.basedir}/cameras-gui/coverage</param>
                    </extraReportFolders>
                    <httpRequestParallelization>2</httpRequestParallelization>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>